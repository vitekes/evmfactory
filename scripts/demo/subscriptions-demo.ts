/**
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø–æ–¥–ø–∏—Å–æ–∫
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –µ–¥–∏–Ω—É—é —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 * –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫, –≤–∫–ª—é—á–∞—è:
 * - –ü–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–æ–∫ (ETH –∏ —Ç–æ–∫–µ–Ω—ã)
 * - –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫
 * - –û—Ç–º–µ–Ω—É –ø–æ–¥–ø–∏—Å–æ–∫
 * - –°–±–æ—Ä –∫–æ–º–∏—Å—Å–∏–π
 * - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–æ–∫
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * npx hardhat run scripts/demo/subscriptions/subscriptionDemo.ts --network localhost
 */

import { ethers } from "hardhat";
import {
    deploySubscriptionContracts,
    runAllSubscriptionScenarios,
} from "./subscriptions";

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */
async function main() {
    console.log("üé¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –ü–û–î–ü–ò–°–û–ö");
    console.log("=".repeat(80));
    console.log("üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:", new Date().toLocaleString());

    try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏ –∏ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö
        const [deployer, merchant, subscriber] = await ethers.getSigners();
        const network = await ethers.provider.getNetwork();
        console.log("üåê –°–µ—Ç—å:", network.name || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");

        console.log("\nüîß –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ï–¢–ò –ò –ê–ö–ö–ê–£–ù–¢–ê–•:");
        console.log("-".repeat(50));
        console.log("üåê –°–µ—Ç—å:", network.name, `(Chain ID: ${network.chainId})`);
        console.log("üë§ –î–µ–ø–ª–æ–µ—Ä:", await deployer.getAddress());
        console.log("üè™ –ú–µ—Ä—á–∞–Ω—Ç:", await merchant.getAddress());
        console.log("üë• –ü–æ–¥–ø–∏—Å—á–∏–∫:", await subscriber.getAddress());

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã
        const deployerBalance = await ethers.provider.getBalance(deployer.address);
        const merchantBalance = await ethers.provider.getBalance(merchant.address);
        const subscriberBalance = await ethers.provider.getBalance(subscriber.address);

        console.log("\nüí∞ –ù–ê–ß–ê–õ–¨–ù–´–ï –ë–ê–õ–ê–ù–°–´:");
        console.log("-".repeat(50));
        console.log("üë§ –î–µ–ø–ª–æ–µ—Ä:", ethers.formatEther(deployerBalance), "ETH");
        console.log("üè™ –ú–µ—Ä—á–∞–Ω—Ç:", ethers.formatEther(merchantBalance), "ETH");
        console.log("üë• –ü–æ–¥–ø–∏—Å—á–∏–∫:", ethers.formatEther(subscriberBalance), "ETH");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
        const minBalance = ethers.parseEther("1.0");
        if (deployerBalance < minBalance || merchantBalance < minBalance || subscriberBalance < minBalance) {
            console.log("\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–∏–∑–∫–∏–µ –±–∞–ª–∞–Ω—Å—ã!");
            console.log("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 1 ETH –Ω–∞ –∫–∞–∂–¥–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ");
            console.log("   –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npx hardhat node");
        }

        console.log("\nüì¶ –î–ï–ü–õ–û–ô –ö–û–ù–¢–†–ê–ö–¢–û–í –ü–û–î–ü–ò–°–û–ö:");
        console.log("=".repeat(80));

        // –î–µ–ø–ª–æ–∏–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫
        const startDeployTime = Date.now();
        const deployment = await deploySubscriptionContracts();
        const deployTime = Date.now() - startDeployTime;

        console.log("\n‚úÖ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!");
        console.log("-".repeat(50));
        console.log("‚è±Ô∏è –í—Ä–µ–º—è –¥–µ–ø–ª–æ—è:", deployTime, "ms");
        console.log("üìã Core System:", await deployment.core.getAddress());
        console.log("üö™ Payment Gateway:", await deployment.gateway.getAddress());
        console.log("üè≠ Subscription Factory:", await deployment.subscriptionFactory.getAddress());
        console.log("üìã Subscription Manager:", await deployment.subscriptionManager.getAddress());
        console.log("ü™ô Test Token:", await deployment.testToken.getAddress());
        console.log("üÜî Module ID:", deployment.moduleId);

        console.log("\nüéØ –ó–ê–ü–£–°–ö –°–¶–ï–ù–ê–†–ò–ï–í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:");
        console.log("=".repeat(80));

        // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
        const startScenariosTime = Date.now();
        const results = await runAllSubscriptionScenarios(deployment);
        const scenariosTime = Date.now() - startScenariosTime;

        console.log("\nüìà –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:");
        console.log("=".repeat(80));

        const successCount = results.filter(r => r.success).length;
        const failureCount = results.length - successCount;

        console.log("üìä –û–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:");
        console.log(`  ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${successCount}/${results.length}`);
        console.log(`  ‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${failureCount}/${results.length}`);
        console.log(`  üìä –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${Math.round((successCount / results.length) * 100)}%`);
        console.log(`  ‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${scenariosTime}ms`);
        console.log(`  ‚ö° –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Å—Ü–µ–Ω–∞—Ä–∏–π: ${Math.round(scenariosTime / results.length)}ms`);

        // –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–∞–∑—É
        let totalGasUsed = 0n;
        results.forEach(result => {
            if (result.success && result.details?.gasUsed) {
                const gasUsed = typeof result.details.gasUsed === 'string'
                    ? result.details.gasUsed
                    : result.details.gasUsed.toString();
                totalGasUsed += BigInt(gasUsed);
            }
        });

        if (totalGasUsed > 0n) {
            console.log(`  ‚õΩ –û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥ –≥–∞–∑–∞: ${totalGasUsed.toString()}`);
            if (successCount > 0) {
                console.log(`  üí∞ –°—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ –≥–∞–∑–∞: ${(totalGasUsed / BigInt(successCount)).toString()}`);
            }
        }

        if (successCount === results.length) {
            console.log("\nüéâ –í–°–ï –°–¶–ï–ù–ê–†–ò–ò –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!");
            console.log("‚ú® –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞");
            console.log("üöÄ –ì–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ");
        } else {
            console.log("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –°–¶–ï–ù–ê–†–ò–ò –ó–ê–í–ï–†–®–ò–õ–ò–°–¨ –° –û–®–ò–ë–ö–ê–ú–ò");
            console.log("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π");

            const failedScenarios = results.filter(r => !r.success);
            console.log("\n‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:");
            failedScenarios.forEach((scenario, index) => {
                console.log(`  ${index + 1}. ${scenario.name}: ${scenario.error}`);
            });
        }

        console.log("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:");
        console.log("  ‚Ä¢ scripts/demo/subscriptions/eth-subscription.ts");
        console.log("  ‚Ä¢ scripts/demo/subscriptions/token-subscription.ts");
        console.log("  ‚Ä¢ scripts/demo/subscriptions/subscription-cancellation.ts");
        console.log("  ‚Ä¢ scripts/demo/subscriptions/subscription-renewal.ts");
        console.log("  ‚Ä¢ scripts/demo/subscriptions/commission-collection.ts");
        console.log("  ‚Ä¢ scripts/demo/subscriptions/discount-subscription.ts");

        console.log("\nüìö –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:");
        console.log("-".repeat(50));
        console.log("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md");
        console.log("üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: hardhat.config.ts");
        console.log("üìÅ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã: contracts/modules/subscriptions/");
        console.log("üß™ –¢–µ—Å—Ç—ã: test/subscriptions/");
        console.log("üìã –°—Ü–µ–Ω–∞—Ä–∏–∏: scripts/demo/subscriptions/");

        console.log("\nüèÅ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê");
        console.log("=".repeat(80));
        console.log("üìÖ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:", new Date().toLocaleString());
        console.log("‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", Date.now() - startDeployTime, "ms");

    } catch (error: any) {
        console.log("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò:");
        console.log("=".repeat(80));
        console.log("üö® –û—à–∏–±–∫–∞:", error.message);

        if (error.stack) {
            console.log("\nüìã Stack trace:");
            console.log(error.stack);
        }

        console.log("\nüîß –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:");
        console.log("-".repeat(50));
        console.log("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ª–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –∑–∞–ø—É—â–µ–Ω–∞: npx hardhat node");
        console.log("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤");
        console.log("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: npm install");
        console.log("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ç–∏ –≤ hardhat.config.ts");
        console.log("5. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à: npx hardhat clean");

        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
main().catch((error) => {
    console.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
});
