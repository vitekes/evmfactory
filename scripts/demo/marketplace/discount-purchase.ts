/**
 * –°–¶–ï–ù–ê–†–ò–ô 3: –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π, –≤–∫–ª—é—á–∞—è —Ä–∞—Å—á–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
 * –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–æ—á–Ω–æ–π —Ü–µ–Ω—ã.
 * 
 * –û–°–ù–û–í–ù–´–ï –≠–¢–ê–ü–´:
 * 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤
 * 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω–æ–π –∏ —Ä–∞–∑–º–µ—Ä–æ–º —Å–∫–∏–¥–∫–∏
 * 3. –†–∞—Å—á–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã —Å–æ —Å–∫–∏–¥–∫–æ–π
 * 4. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∏–¥–æ—á–Ω–æ–≥–æ –ª–∏—Å—Ç–∏–Ω–≥–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –ø—Ä–æ–¥–∞–≤—Ü–∞
 * 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ —Å–∫–∏–¥–æ—á–Ω–æ–π —Ü–µ–Ω–µ
 * 6. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –ø–æ —Å–Ω–∏–∂–µ–Ω–Ω–æ–π —Ü–µ–Ω–µ
 * 7. –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–π –æ—Ç —Å–∫–∏–¥–æ—á–Ω–æ–π —Ü–µ–Ω—ã
 * 8. –ê–Ω–∞–ª–∏–∑ —ç–∫–æ–Ω–æ–º–∏–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
 * 9. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–∫–∏–¥–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
 * 
 * –û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:
 * - –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: –∑–∞–ø–ª–∞—Ç–∏–ª —Å–∫–∏–¥–æ—á–Ω—É—é —Ü–µ–Ω—É (—ç–∫–æ–Ω–æ–º–∏—è 20%)
 * - –ü—Ä–æ–¥–∞–≤–µ—Ü: –ø–æ–ª—É—á–∏–ª —Å–∫–∏–¥–æ—á–Ω—É—é —Ü–µ–Ω—É –∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–π
 * - Gateway: –ø–æ–ª—É—á–∏–ª –∫–æ–º–∏—Å—Å–∏—é –æ—Ç —Å–∫–∏–¥–æ—á–Ω–æ–π —Ü–µ–Ω—ã
 * - –ö–æ–º–∏—Å—Å–∏–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–π (—Å–∫–∏–¥–æ—á–Ω–æ–π) —Ü–µ–Ω—ã
 */

import { ethers } from "hardhat";
import { Signer } from "ethers";
import { DeploymentResult } from "../utils/deploy";
import { Product, createDiscountedListing } from "../utils/marketplace";
import { BaseScenario, ScenarioConfig, ScenarioResult } from "./base-scenario";
import { BalanceChange } from "../utils/balance";

/**
 * –°—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–∫—É–ø–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π
 */
export class DiscountPurchaseScenario extends BaseScenario {
    private originalPrice: bigint;
    private discountPercent: number;

    constructor(
        deployment: DeploymentResult,
        seller: Signer,
        buyer: Signer
    ) {
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫–∏–¥–∫–∏
        const originalPrice = ethers.parseEther("0.1"); // 0.1 ETH –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
        const discountPercent = 2000; // 20% —Å–∫–∏–¥–∫–∞ (–≤ –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö)

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π
        const discountAmount = (originalPrice * BigInt(discountPercent)) / 10000n;
        const finalPrice = originalPrice - discountAmount;

        const product: Product = {
            id: 1003,
            price: finalPrice, // –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π
            tokenAddress: ethers.ZeroAddress, // –ù–∞—Ç–∏–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ (ETH)
            discount: discountPercent
        };

        const config: ScenarioConfig = {
            name: "–°–¶–ï–ù–ê–†–ò–ô 3: –ü–æ–∫—É–ø–∫–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π",
            description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π –∏ –∞–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è —Å–∫–∏–¥–∫–∏ –Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏",
            product: product,
            prepareTokens: false
        };

        super(deployment, seller, buyer, config);

        this.originalPrice = originalPrice;
        this.discountPercent = discountPercent;
    }

    /**
     * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–∏–Ω–≥–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
     */
    protected async createListing(): Promise<{ listing: any; signature: string }> {
        console.log("\nüè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∏–¥–æ—á–Ω–æ–≥–æ –ª–∏—Å—Ç–∏–Ω–≥–∞:");
        console.log(`  –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${ethers.formatEther(this.originalPrice)} ETH`);
        console.log(`  –†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏: ${this.discountPercent / 100}%`);
        console.log(`  –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${ethers.formatEther(this.config.product.price)} ETH`);

        return await createDiscountedListing(
            this.deployment.marketplace,
            this.seller,
            this.config.product.id,
            this.originalPrice,
            this.discountPercent,
            this.config.product.tokenAddress
        );
    }

    /**
     * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è —Å–∫–∏–¥–æ—á–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
     * 
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–æ —Å–∫–∏–¥–∫–æ–π,
     * –≤–∫–ª—é—á–∞—è –∞–Ω–∞–ª–∏–∑ —ç–∫–æ–Ω–æ–º–∏–∏, –≤–ª–∏—è–Ω–∏—è –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ —Å–∫–∏–¥–∫–∏.
     */
    protected async performAdditionalAnalysis(
        listing: any,
        sellerChanges: BalanceChange,
        buyerChanges: BalanceChange,
        gatewayChanges: BalanceChange
    ): Promise<void> {
        console.log("\nüîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∫–∏–¥–æ—á–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:");

        // –û—Å–Ω–æ–≤–Ω—ã–µ —Å—É–º–º—ã
        const totalPaid = -buyerChanges.nativeChange;
        const sellerReceived = sellerChanges.nativeChange;
        const gatewayReceived = gatewayChanges.nativeChange;

        // –ê–Ω–∞–ª–∏–∑ —Å–∫–∏–¥–∫–∏
        const discountAmount = this.originalPrice - listing.price;
        const actualSavings = this.originalPrice - totalPaid;

        console.log("\nüéØ –ê–Ω–∞–ª–∏–∑ —Å–∫–∏–¥–∫–∏:");
        console.log(`  –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${ethers.formatEther(this.originalPrice)} ETH`);
        console.log(`  –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: ${ethers.formatEther(listing.price)} ETH`);
        console.log(`  –†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏: ${this.discountPercent / 100}%`);
        console.log(`  –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${ethers.formatEther(discountAmount)} ETH`);
        console.log(`  –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${ethers.formatEther(actualSavings)} ETH`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–∫–∏–¥–∫–∏
        if (discountAmount === actualSavings) {
            console.log("  ‚úÖ –°–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
        } else {
            const difference = actualSavings - discountAmount;
            console.log(`  ‚ö†Ô∏è –†–∞–∑–Ω–∏—Ü–∞ –≤ —ç–∫–æ–Ω–æ–º–∏–∏: ${ethers.formatEther(difference)} ETH`);
        }

        // –ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è —Å–∫–∏–¥–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        console.log("\nüí∞ –í–ª–∏—è–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:");

        // –î–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        const buyerSavingsPercent = (actualSavings * 100n) / this.originalPrice;
        console.log(`  –ü–æ–∫—É–ø–∞—Ç–µ–ª—å —Å—ç–∫–æ–Ω–æ–º–∏–ª: ${buyerSavingsPercent}% –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã`);

        // –î–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞
        const sellerLossFromDiscount = discountAmount;
        const sellerLossFromFees = listing.price - sellerReceived;
        const totalSellerLoss = sellerLossFromDiscount + sellerLossFromFees;

        console.log(`  –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ—Ç–µ—Ä—è–ª –æ—Ç —Å–∫–∏–¥–∫–∏: ${ethers.formatEther(sellerLossFromDiscount)} ETH`);
        console.log(`  –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ—Ç–µ—Ä—è–ª –æ—Ç –∫–æ–º–∏—Å—Å–∏–π: ${ethers.formatEther(sellerLossFromFees)} ETH`);
        console.log(`  –û–±—â–∏–µ –ø–æ—Ç–µ—Ä–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞: ${ethers.formatEther(totalSellerLoss)} ETH`);

        const sellerEfficiencyFromOriginal = (sellerReceived * 100n) / this.originalPrice;
        console.log(`  –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–∞ –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã: ${sellerEfficiencyFromOriginal}%`);

        // –î–ª—è gateway
        const gatewayFeesFromDiscounted = gatewayReceived;
        const theoreticalFeesFromOriginal = this.estimateFeesFromPrice(this.originalPrice);

        console.log(`  Gateway –ø–æ–ª—É—á–∏–ª –∫–æ–º–∏—Å—Å–∏–π: ${ethers.formatEther(gatewayFeesFromDiscounted)} ETH`);
        console.log(`  –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ —Å –ø–æ–ª–Ω–æ–π —Ü–µ–Ω—ã: ${ethers.formatEther(theoreticalFeesFromOriginal)} ETH`);

        const gatewayLossFromDiscount = theoreticalFeesFromOriginal - gatewayFeesFromDiscounted;
        console.log(`  Gateway –ø–æ—Ç–µ—Ä—è–ª –æ—Ç —Å–∫–∏–¥–∫–∏: ${ethers.formatEther(gatewayLossFromDiscount)} ETH`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —ç–∫–æ–Ω–æ–º–∏–∫–∏
        console.log("\n‚öñÔ∏è –ë–∞–ª–∞–Ω—Å —ç–∫–æ–Ω–æ–º–∏–∫–∏ —Å–∫–∏–¥–∫–∏:");
        const totalSystemLoss = sellerLossFromDiscount + gatewayLossFromDiscount;
        console.log(`  –û–±—â–∏–µ –ø–æ—Ç–µ—Ä–∏ —Å–∏—Å—Ç–µ–º—ã: ${ethers.formatEther(totalSystemLoss)} ETH`);
        console.log(`  –í—ã–≥–æ–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: ${ethers.formatEther(actualSavings)} ETH`);

        if (totalSystemLoss === actualSavings) {
            console.log("  ‚úÖ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å —Å–∫–∏–¥–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω");
        } else {
            const imbalance = actualSavings - totalSystemLoss;
            console.log(`  ‚ö†Ô∏è –î–∏—Å–±–∞–ª–∞–Ω—Å –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ: ${ethers.formatEther(imbalance)} ETH`);
        }

        // –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ —Å–∫–∏–¥–∫–∏
        this.analyzeDiscountReasonableness(listing, sellerReceived, gatewayReceived);
    }

    /**
     * –û—Ü–µ–Ω–∫–∞ –∫–æ–º–∏—Å—Å–∏–π –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–π —Ü–µ–Ω—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è)
     */
    private estimateFeesFromPrice(price: bigint): bigint {
        // –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–æ–º–∏—Å—Å–∏–π (–æ–±—ã—á–Ω–æ 2-5% –æ—Ç —Ü–µ–Ω—ã)
        // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        return (price * 300n) / 10000n; // 3% –∫–æ–º–∏—Å—Å–∏—è
    }

    /**
     * –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ —Å–∫–∏–¥–∫–∏
     */
    private analyzeDiscountReasonableness(
        listing: any,
        sellerReceived: bigint,
        gatewayReceived: bigint
    ): void {
        console.log("\nüßÆ –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ —Å–∫–∏–¥–∫–∏:");

        const discountPercent = this.discountPercent / 100;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏
        if (discountPercent > 50) {
            console.log("  ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –°–∫–∏–¥–∫–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 50% - –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è");
        } else if (discountPercent > 30) {
            console.log("  ‚ö†Ô∏è –°–∫–∏–¥–∫–∞ –¥–æ–≤–æ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∞—è (>30%)");
        } else if (discountPercent > 10) {
            console.log("  ‚úÖ –°–∫–∏–¥–∫–∞ —É–º–µ—Ä–µ–Ω–Ω–∞—è (10-30%)");
        } else {
            console.log("  ‚úÖ –°–∫–∏–¥–∫–∞ –Ω–µ–±–æ–ª—å—à–∞—è (<10%)");
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞
        const sellerRetentionPercent = (sellerReceived * 100n) / this.originalPrice;
        console.log(`  –ü—Ä–æ–¥–∞–≤–µ—Ü —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç: ${sellerRetentionPercent}% –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã`);

        if (sellerRetentionPercent < 50n) {
            console.log("  ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∞–µ—Ç –º–µ–Ω–µ–µ 50% –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã");
        } else if (sellerRetentionPercent < 70n) {
            console.log("  ‚ö†Ô∏è –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∞–µ—Ç –º–µ–Ω–µ–µ 70% –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã");
        } else {
            console.log("  ‚úÖ –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∞–µ—Ç —Ä–∞–∑—É–º–Ω—É—é –¥–æ–ª—é –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã");
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏
        const feeRetentionPercent = (gatewayReceived * 100n) / this.estimateFeesFromPrice(this.originalPrice);
        console.log(`  Gateway —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç: ${feeRetentionPercent}% –æ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π`);

        if (feeRetentionPercent < 50n) {
            console.log("  ‚ö†Ô∏è –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π –∏–∑-–∑–∞ —Å–∫–∏–¥–∫–∏");
        } else {
            console.log("  ‚úÖ –ö–æ–º–∏—Å—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —Ä–∞–∑—É–º–Ω–æ–º —É—Ä–æ–≤–Ω–µ");
        }
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
 */
export async function testDiscountPurchase(
    deployment: DeploymentResult,
    seller: Signer,
    buyer: Signer
): Promise<ScenarioResult> {
    const scenario = new DiscountPurchaseScenario(deployment, seller, buyer);
    return await scenario.execute();
}
