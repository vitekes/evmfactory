/**
 * –°–¶–ï–ù–ê–†–ò–ô 1: –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –Ω–∞—Ç–∏–≤–Ω–æ–π –≤–∞–ª—é—Ç–µ (ETH)
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ - –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞
 * –∑–∞ –Ω–∞—Ç–∏–≤–Ω—É—é –≤–∞–ª—é—Ç—É –±–ª–æ–∫—á–µ–π–Ω–∞ (ETH) —Å –ø–æ–ª–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º –∫–æ–º–∏—Å—Å–∏–π.
 * 
 * –û–°–ù–û–í–ù–´–ï –≠–¢–ê–ü–´:
 * 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤
 * 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –ª–∏—Å—Ç–∏–Ω–≥–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –ø—Ä–æ–¥–∞–≤—Ü–∞
 * 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤ —É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
 * 4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç
 * 5. –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–π –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å–æ–≤
 * 6. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * 
 * –û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:
 * - –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: –±–∞–ª–∞–Ω—Å ETH —É–º–µ–Ω—å—à–∏–ª—Å—è –Ω–∞ —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏ + –∫–æ–º–∏—Å—Å–∏–∏
 * - –ü—Ä–æ–¥–∞–≤–µ—Ü: –±–∞–ª–∞–Ω—Å ETH —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏ - –∫–æ–º–∏—Å—Å–∏–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
 * - Gateway: –±–∞–ª–∞–Ω—Å ETH —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ —Å—É–º–º—É –∫–æ–º–∏—Å—Å–∏–π
 * - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –±–µ–∑ –æ—à–∏–±–æ–∫
 */

import { ethers } from "hardhat";
import { Signer } from "ethers";
import { DeploymentResult } from "../utils/deploy";
import { Product } from "../utils/marketplace";
import { BaseScenario, ScenarioConfig, ScenarioResult } from "./base-scenario";
import { 
    BalanceChange, 
    BalanceInfo, 
    getAccountBalances, 
    calculateBalanceChanges 
} from "../utils/balance";

/**
 * –°—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–∫—É–ø–∫–∏ –≤ –Ω–∞—Ç–∏–≤–Ω–æ–π –≤–∞–ª—é—Ç–µ (ETH)
 */
export class NativeCurrencyPurchaseScenario extends BaseScenario {

    constructor(
        deployment: DeploymentResult,
        seller: Signer,
        buyer: Signer
    ) {
        const product: Product = {
            id: 1001,
            price: ethers.parseEther("0.05"), // 0.05 ETH - –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            tokenAddress: ethers.ZeroAddress, // –ù–∞—Ç–∏–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ (ETH)
            discount: 0
        };

        const config: ScenarioConfig = {
            name: "–°–¶–ï–ù–ê–†–ò–ô 1: –ü–æ–∫—É–ø–∫–∞ –≤ –Ω–∞—Ç–∏–≤–Ω–æ–π –≤–∞–ª—é—Ç–µ (ETH)",
            description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –∑–∞ ETH —Å –ø–æ–ª–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º –∫–æ–º–∏—Å—Å–∏–π",
            product: product,
            prepareTokens: false // –ù–µ –Ω—É–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –¥–ª—è ETH
        };

        super(deployment, seller, buyer, config);
    }

    /**
     * –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–π –¥–ª—è ETH —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
     *
     * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –±–∞–∑–æ–≤—ã–π –º–µ—Ç–æ–¥, –¥–æ–±–∞–≤–ª—è—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
     * –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –Ω–∞—Ç–∏–≤–Ω–æ–π –≤–∞–ª—é—Ç–µ.
     */
    protected analyzeCommissions(
        sellerChanges: BalanceChange,
        buyerChanges: BalanceChange,
        gatewayChanges: BalanceChange,
        listingPrice: bigint
    ): void {
        // –í—ã–∑–æ–≤ –±–∞–∑–æ–≤–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
        super.analyzeCommissions(sellerChanges, buyerChanges, gatewayChanges, listingPrice);

        console.log("\nüîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ETH —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –±–∞–∑–æ–≤—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
        const totalPaid = -buyerChanges.nativeChange;
        const sellerReceived = sellerChanges.nativeChange;
        const gatewayReceived = gatewayChanges.nativeChange;

        console.log(`  –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –ø–æ –ª–∏—Å—Ç–∏–Ω–≥—É: ${ethers.formatEther(listingPrice)} ETH`);
        console.log(`  –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–ª–∞—á–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º: ${ethers.formatEther(totalPaid)} ETH`);
        console.log(`  –†–∞–∑–Ω–∏—Ü–∞ (–∫–æ–º–∏—Å—Å–∏–∏ + –≥–∞–∑): ${ethers.formatEther(totalPaid - listingPrice)} ETH`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å—Ä–µ–¥—Å—Ç–≤
        const totalReceived = sellerReceived + gatewayReceived;
        console.log(`  –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–ª—É—á–µ–Ω–∞ (–ø—Ä–æ–¥–∞–≤–µ—Ü + gateway): ${ethers.formatEther(totalReceived)} ETH`);

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        const sellerEfficiency = (sellerReceived * 100n) / listingPrice;
        console.log(`  –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞: ${sellerEfficiency}% –æ—Ç —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—É–º–Ω–æ—Å—Ç—å –∫–æ–º–∏—Å—Å–∏–π
        const totalFees = totalPaid - sellerReceived;
        const feePercentage = (totalFees * 10000n) / listingPrice; // –í –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö
        console.log(`  –û–±—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏: ${ethers.formatEther(totalFees)} ETH (${feePercentage} bp)`);

        if (feePercentage > 1000n) { // –ë–æ–ª–µ–µ 10%
            console.log("  ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–º–∏—Å—Å–∏–∏ –ø—Ä–µ–≤—ã—à–∞—é—Ç 10% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞");
        } else {
            console.log("  ‚úÖ –ö–æ–º–∏—Å—Å–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö");
        }
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
 */
export async function testNativeCurrencyPurchase(
    deployment: DeploymentResult,
    seller: Signer,
    buyer: Signer
): Promise<ScenarioResult> {
    const scenario = new NativeCurrencyPurchaseScenario(deployment, seller, buyer);
    return await scenario.execute();
}
